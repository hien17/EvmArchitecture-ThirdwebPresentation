"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["node_modules_thirdweb_dist_esm_transaction_actions_gasless_providers_biconomy_js"],{

/***/ "./node_modules/thirdweb/dist/esm/transaction/actions/gasless/providers/biconomy.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/thirdweb/dist/esm/transaction/actions/gasless/providers/biconomy.js ***!
  \******************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   prepareBiconomyTransaction: function() { return /* binding */ prepareBiconomyTransaction; },\n/* harmony export */   relayBiconomyTransaction: function() { return /* binding */ relayBiconomyTransaction; }\n/* harmony export */ });\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! viem */ \"./node_modules/viem/_esm/index.js\");\n/* harmony import */ var _constants_addresses_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../constants/addresses.js */ \"./node_modules/thirdweb/dist/esm/constants/addresses.js\");\n/* harmony import */ var _contract_contract_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../contract/contract.js */ \"./node_modules/thirdweb/dist/esm/contract/contract.js\");\n/* harmony import */ var _utils_encoding_helpers_is_hex_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../utils/encoding/helpers/is-hex.js */ \"./node_modules/thirdweb/dist/esm/utils/encoding/helpers/is-hex.js\");\n/* harmony import */ var _utils_hashing_keccak256_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../utils/hashing/keccak256.js */ \"./node_modules/thirdweb/dist/esm/utils/hashing/keccak256.js\");\n/* harmony import */ var _utils_json_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../utils/json.js */ \"./node_modules/thirdweb/dist/esm/utils/json.js\");\n/* harmony import */ var _read_contract_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../read-contract.js */ \"./node_modules/thirdweb/dist/esm/transaction/read-contract.js\");\n\n\n\n\n\n\n\n// we do not send multiple batches so this stays consistent\nconst BATCH_ID = 0n;\n/**\n * @internal - only exported for testing\n */\nasync function prepareBiconomyTransaction({ account, serializableTransaction, transaction, gasless, }) {\n    const forwarderContract = (0,_contract_contract_js__WEBPACK_IMPORTED_MODULE_0__.getContract)({\n        address: gasless.relayerForwarderAddress,\n        chain: transaction.chain,\n        client: transaction.client,\n    });\n    // get the nonce\n    const nonce = await (0,_read_contract_js__WEBPACK_IMPORTED_MODULE_1__.readContract)({\n        contract: forwarderContract,\n        method: \"function getNonce(address,uint256) view returns (uint256)\",\n        params: [account.address, BATCH_ID],\n    });\n    const deadline = Math.floor(Date.now() / 1000) + (gasless.deadlineSeconds ?? 3600);\n    const request = {\n        from: account.address,\n        to: serializableTransaction.to,\n        token: _constants_addresses_js__WEBPACK_IMPORTED_MODULE_2__.ADDRESS_ZERO,\n        txGas: serializableTransaction.gas,\n        tokenGasPrice: 0n,\n        batchId: BATCH_ID,\n        batchNonce: nonce,\n        deadline: deadline,\n        data: serializableTransaction.data,\n    };\n    if (!request.to) {\n        throw new Error(\"Cannot send a transaction without a `to` address\");\n    }\n    if (!request.txGas) {\n        throw new Error(\"Cannot send a transaction without a `gas` value\");\n    }\n    if (!request.data) {\n        throw new Error(\"Cannot send a transaction without a `data` value\");\n    }\n    // create the hash\n    const message = (0,viem__WEBPACK_IMPORTED_MODULE_3__.encodeAbiParameters)([\n        { type: \"address\" },\n        { type: \"address\" },\n        { type: \"address\" },\n        { type: \"uint256\" },\n        { type: \"uint256\" },\n        { type: \"uint256\" },\n        { type: \"uint256\" },\n        { type: \"bytes32\" },\n    ], [\n        request.from,\n        request.to,\n        request.token,\n        request.txGas,\n        request.tokenGasPrice,\n        request.batchId,\n        request.batchNonce,\n        (0,_utils_hashing_keccak256_js__WEBPACK_IMPORTED_MODULE_4__.keccak256)(request.data),\n    ]);\n    const signature = await account.signMessage({ message });\n    return [request, signature];\n}\n/**\n * @internal\n */\nasync function relayBiconomyTransaction(options) {\n    const [request, signature] = await prepareBiconomyTransaction(options);\n    // send the transaction to the biconomy api\n    const response = await fetch(\"https://api.biconomy.io/api/v2/meta-tx/native\", {\n        method: \"POST\",\n        body: (0,_utils_json_js__WEBPACK_IMPORTED_MODULE_5__.stringify)({\n            apiId: options.gasless.apiId,\n            params: [request, signature],\n            from: request.from,\n            to: request.to,\n            gasLimit: request.txGas,\n        }),\n        headers: {\n            \"x-api-key\": options.gasless.apiKey,\n            \"Content-Type\": \"application/json;charset=utf-8\",\n        },\n    });\n    if (!response.ok) {\n        response.body?.cancel();\n        throw new Error(`Failed to send transaction: ${await response.text()}`);\n    }\n    const json = await response.json();\n    const transactionHash = json.txHash;\n    if ((0,_utils_encoding_helpers_is_hex_js__WEBPACK_IMPORTED_MODULE_6__.isHex)(transactionHash)) {\n        return {\n            transactionHash: transactionHash,\n            chain: options.transaction.chain,\n            client: options.transaction.client,\n        };\n    }\n    throw new Error(`Failed to send transaction: ${(0,_utils_json_js__WEBPACK_IMPORTED_MODULE_5__.stringify)(json)}`);\n}\n//# sourceMappingURL=biconomy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdGhpcmR3ZWIvZGlzdC9lc20vdHJhbnNhY3Rpb24vYWN0aW9ucy9nYXNsZXNzL3Byb3ZpZGVycy9iaWNvbm9teS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBMkM7QUFDdUI7QUFDSDtBQUNNO0FBQ0Y7QUFDYjtBQUNHO0FBQ3pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyw0Q0FBNEMseURBQXlEO0FBQzVHLDhCQUE4QixrRUFBVztBQUN6QztBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSx3QkFBd0IsK0RBQVk7QUFDcEM7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxpRUFBWTtBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLHlEQUFtQjtBQUN2QyxVQUFVLGlCQUFpQjtBQUMzQixVQUFVLGlCQUFpQjtBQUMzQixVQUFVLGlCQUFpQjtBQUMzQixVQUFVLGlCQUFpQjtBQUMzQixVQUFVLGlCQUFpQjtBQUMzQixVQUFVLGlCQUFpQjtBQUMzQixVQUFVLGlCQUFpQjtBQUMzQixVQUFVLGlCQUFpQjtBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSxzRUFBUztBQUNqQjtBQUNBLGtEQUFrRCxTQUFTO0FBQzNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyx5REFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSw4Q0FBOEM7QUFDOUMsU0FBUztBQUNULEtBQUs7QUFDTDtBQUNBO0FBQ0EsdURBQXVELHNCQUFzQjtBQUM3RTtBQUNBO0FBQ0E7QUFDQSxRQUFRLHdFQUFLO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbURBQW1ELHlEQUFTLE9BQU87QUFDbkU7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvdGhpcmR3ZWIvZGlzdC9lc20vdHJhbnNhY3Rpb24vYWN0aW9ucy9nYXNsZXNzL3Byb3ZpZGVycy9iaWNvbm9teS5qcz81ZWE1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGVuY29kZUFiaVBhcmFtZXRlcnMgfSBmcm9tIFwidmllbVwiO1xuaW1wb3J0IHsgQUREUkVTU19aRVJPIH0gZnJvbSBcIi4uLy4uLy4uLy4uL2NvbnN0YW50cy9hZGRyZXNzZXMuanNcIjtcbmltcG9ydCB7IGdldENvbnRyYWN0IH0gZnJvbSBcIi4uLy4uLy4uLy4uL2NvbnRyYWN0L2NvbnRyYWN0LmpzXCI7XG5pbXBvcnQgeyBpc0hleCB9IGZyb20gXCIuLi8uLi8uLi8uLi91dGlscy9lbmNvZGluZy9oZWxwZXJzL2lzLWhleC5qc1wiO1xuaW1wb3J0IHsga2VjY2FrMjU2IH0gZnJvbSBcIi4uLy4uLy4uLy4uL3V0aWxzL2hhc2hpbmcva2VjY2FrMjU2LmpzXCI7XG5pbXBvcnQgeyBzdHJpbmdpZnkgfSBmcm9tIFwiLi4vLi4vLi4vLi4vdXRpbHMvanNvbi5qc1wiO1xuaW1wb3J0IHsgcmVhZENvbnRyYWN0IH0gZnJvbSBcIi4uLy4uLy4uL3JlYWQtY29udHJhY3QuanNcIjtcbi8vIHdlIGRvIG5vdCBzZW5kIG11bHRpcGxlIGJhdGNoZXMgc28gdGhpcyBzdGF5cyBjb25zaXN0ZW50XG5jb25zdCBCQVRDSF9JRCA9IDBuO1xuLyoqXG4gKiBAaW50ZXJuYWwgLSBvbmx5IGV4cG9ydGVkIGZvciB0ZXN0aW5nXG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBwcmVwYXJlQmljb25vbXlUcmFuc2FjdGlvbih7IGFjY291bnQsIHNlcmlhbGl6YWJsZVRyYW5zYWN0aW9uLCB0cmFuc2FjdGlvbiwgZ2FzbGVzcywgfSkge1xuICAgIGNvbnN0IGZvcndhcmRlckNvbnRyYWN0ID0gZ2V0Q29udHJhY3Qoe1xuICAgICAgICBhZGRyZXNzOiBnYXNsZXNzLnJlbGF5ZXJGb3J3YXJkZXJBZGRyZXNzLFxuICAgICAgICBjaGFpbjogdHJhbnNhY3Rpb24uY2hhaW4sXG4gICAgICAgIGNsaWVudDogdHJhbnNhY3Rpb24uY2xpZW50LFxuICAgIH0pO1xuICAgIC8vIGdldCB0aGUgbm9uY2VcbiAgICBjb25zdCBub25jZSA9IGF3YWl0IHJlYWRDb250cmFjdCh7XG4gICAgICAgIGNvbnRyYWN0OiBmb3J3YXJkZXJDb250cmFjdCxcbiAgICAgICAgbWV0aG9kOiBcImZ1bmN0aW9uIGdldE5vbmNlKGFkZHJlc3MsdWludDI1NikgdmlldyByZXR1cm5zICh1aW50MjU2KVwiLFxuICAgICAgICBwYXJhbXM6IFthY2NvdW50LmFkZHJlc3MsIEJBVENIX0lEXSxcbiAgICB9KTtcbiAgICBjb25zdCBkZWFkbGluZSA9IE1hdGguZmxvb3IoRGF0ZS5ub3coKSAvIDEwMDApICsgKGdhc2xlc3MuZGVhZGxpbmVTZWNvbmRzID8/IDM2MDApO1xuICAgIGNvbnN0IHJlcXVlc3QgPSB7XG4gICAgICAgIGZyb206IGFjY291bnQuYWRkcmVzcyxcbiAgICAgICAgdG86IHNlcmlhbGl6YWJsZVRyYW5zYWN0aW9uLnRvLFxuICAgICAgICB0b2tlbjogQUREUkVTU19aRVJPLFxuICAgICAgICB0eEdhczogc2VyaWFsaXphYmxlVHJhbnNhY3Rpb24uZ2FzLFxuICAgICAgICB0b2tlbkdhc1ByaWNlOiAwbixcbiAgICAgICAgYmF0Y2hJZDogQkFUQ0hfSUQsXG4gICAgICAgIGJhdGNoTm9uY2U6IG5vbmNlLFxuICAgICAgICBkZWFkbGluZTogZGVhZGxpbmUsXG4gICAgICAgIGRhdGE6IHNlcmlhbGl6YWJsZVRyYW5zYWN0aW9uLmRhdGEsXG4gICAgfTtcbiAgICBpZiAoIXJlcXVlc3QudG8pIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiQ2Fubm90IHNlbmQgYSB0cmFuc2FjdGlvbiB3aXRob3V0IGEgYHRvYCBhZGRyZXNzXCIpO1xuICAgIH1cbiAgICBpZiAoIXJlcXVlc3QudHhHYXMpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiQ2Fubm90IHNlbmQgYSB0cmFuc2FjdGlvbiB3aXRob3V0IGEgYGdhc2AgdmFsdWVcIik7XG4gICAgfVxuICAgIGlmICghcmVxdWVzdC5kYXRhKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIkNhbm5vdCBzZW5kIGEgdHJhbnNhY3Rpb24gd2l0aG91dCBhIGBkYXRhYCB2YWx1ZVwiKTtcbiAgICB9XG4gICAgLy8gY3JlYXRlIHRoZSBoYXNoXG4gICAgY29uc3QgbWVzc2FnZSA9IGVuY29kZUFiaVBhcmFtZXRlcnMoW1xuICAgICAgICB7IHR5cGU6IFwiYWRkcmVzc1wiIH0sXG4gICAgICAgIHsgdHlwZTogXCJhZGRyZXNzXCIgfSxcbiAgICAgICAgeyB0eXBlOiBcImFkZHJlc3NcIiB9LFxuICAgICAgICB7IHR5cGU6IFwidWludDI1NlwiIH0sXG4gICAgICAgIHsgdHlwZTogXCJ1aW50MjU2XCIgfSxcbiAgICAgICAgeyB0eXBlOiBcInVpbnQyNTZcIiB9LFxuICAgICAgICB7IHR5cGU6IFwidWludDI1NlwiIH0sXG4gICAgICAgIHsgdHlwZTogXCJieXRlczMyXCIgfSxcbiAgICBdLCBbXG4gICAgICAgIHJlcXVlc3QuZnJvbSxcbiAgICAgICAgcmVxdWVzdC50byxcbiAgICAgICAgcmVxdWVzdC50b2tlbixcbiAgICAgICAgcmVxdWVzdC50eEdhcyxcbiAgICAgICAgcmVxdWVzdC50b2tlbkdhc1ByaWNlLFxuICAgICAgICByZXF1ZXN0LmJhdGNoSWQsXG4gICAgICAgIHJlcXVlc3QuYmF0Y2hOb25jZSxcbiAgICAgICAga2VjY2FrMjU2KHJlcXVlc3QuZGF0YSksXG4gICAgXSk7XG4gICAgY29uc3Qgc2lnbmF0dXJlID0gYXdhaXQgYWNjb3VudC5zaWduTWVzc2FnZSh7IG1lc3NhZ2UgfSk7XG4gICAgcmV0dXJuIFtyZXF1ZXN0LCBzaWduYXR1cmVdO1xufVxuLyoqXG4gKiBAaW50ZXJuYWxcbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHJlbGF5Qmljb25vbXlUcmFuc2FjdGlvbihvcHRpb25zKSB7XG4gICAgY29uc3QgW3JlcXVlc3QsIHNpZ25hdHVyZV0gPSBhd2FpdCBwcmVwYXJlQmljb25vbXlUcmFuc2FjdGlvbihvcHRpb25zKTtcbiAgICAvLyBzZW5kIHRoZSB0cmFuc2FjdGlvbiB0byB0aGUgYmljb25vbXkgYXBpXG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChcImh0dHBzOi8vYXBpLmJpY29ub215LmlvL2FwaS92Mi9tZXRhLXR4L25hdGl2ZVwiLCB7XG4gICAgICAgIG1ldGhvZDogXCJQT1NUXCIsXG4gICAgICAgIGJvZHk6IHN0cmluZ2lmeSh7XG4gICAgICAgICAgICBhcGlJZDogb3B0aW9ucy5nYXNsZXNzLmFwaUlkLFxuICAgICAgICAgICAgcGFyYW1zOiBbcmVxdWVzdCwgc2lnbmF0dXJlXSxcbiAgICAgICAgICAgIGZyb206IHJlcXVlc3QuZnJvbSxcbiAgICAgICAgICAgIHRvOiByZXF1ZXN0LnRvLFxuICAgICAgICAgICAgZ2FzTGltaXQ6IHJlcXVlc3QudHhHYXMsXG4gICAgICAgIH0pLFxuICAgICAgICBoZWFkZXJzOiB7XG4gICAgICAgICAgICBcIngtYXBpLWtleVwiOiBvcHRpb25zLmdhc2xlc3MuYXBpS2V5LFxuICAgICAgICAgICAgXCJDb250ZW50LVR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLThcIixcbiAgICAgICAgfSxcbiAgICB9KTtcbiAgICBpZiAoIXJlc3BvbnNlLm9rKSB7XG4gICAgICAgIHJlc3BvbnNlLmJvZHk/LmNhbmNlbCgpO1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEZhaWxlZCB0byBzZW5kIHRyYW5zYWN0aW9uOiAke2F3YWl0IHJlc3BvbnNlLnRleHQoKX1gKTtcbiAgICB9XG4gICAgY29uc3QganNvbiA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcbiAgICBjb25zdCB0cmFuc2FjdGlvbkhhc2ggPSBqc29uLnR4SGFzaDtcbiAgICBpZiAoaXNIZXgodHJhbnNhY3Rpb25IYXNoKSkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgdHJhbnNhY3Rpb25IYXNoOiB0cmFuc2FjdGlvbkhhc2gsXG4gICAgICAgICAgICBjaGFpbjogb3B0aW9ucy50cmFuc2FjdGlvbi5jaGFpbixcbiAgICAgICAgICAgIGNsaWVudDogb3B0aW9ucy50cmFuc2FjdGlvbi5jbGllbnQsXG4gICAgICAgIH07XG4gICAgfVxuICAgIHRocm93IG5ldyBFcnJvcihgRmFpbGVkIHRvIHNlbmQgdHJhbnNhY3Rpb246ICR7c3RyaW5naWZ5KGpzb24pfWApO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Ymljb25vbXkuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/thirdweb/dist/esm/transaction/actions/gasless/providers/biconomy.js\n"));

/***/ })

}]);